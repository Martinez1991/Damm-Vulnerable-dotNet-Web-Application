"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.creator = exports.messages = void 0;
const regexp_string_matcher_1 = require("@textlint/regexp-string-matcher");
exports.messages = {
    SENDGRID_KEY: {
        en: (props) => `found Sendgrid api key: ${props.KEY}`,
        ja: (props) => `Sendgrid APIキーが見つかりました： ${props.KEY}`,
    },
};
function reportIfFoundKey({ source, options, context, t, }) {
    const SENDGRID_KEY_PATTERN = /SG\.\w{1,128}\.\w{1,128}-\w{1,128}/g;
    const results = source.content.matchAll(SENDGRID_KEY_PATTERN);
    for (const result of results) {
        const index = result.index || 0;
        const match = result[0] || "";
        const range = [index, index + match.length];
        const allowedResults = regexp_string_matcher_1.matchPatterns(match, options.allows);
        if (allowedResults.length > 0) {
            continue;
        }
        context.report({
            message: t("SENDGRID_KEY", {
                KEY: match,
            }),
            range,
        });
    }
}
exports.creator = {
    messages: exports.messages,
    meta: {
        id: "@secretlint/secretlint-rule-sendgrid",
        recommended: true,
        type: "scanner",
        supportedContentTypes: ["text"],
        docs: {
            url: "https://github.com/secretlint/secretlint/blob/master/packages/%40secretlint/secretlint-rule-sendgrid/README.md",
        },
    },
    create(context, options) {
        const t = context.createTranslator(exports.messages);
        const normalizedOptions = {
            allows: options.allows || [],
        };
        return {
            file(source) {
                reportIfFoundKey({ source, options: normalizedOptions, context, t });
            },
        };
    },
};
exports.default = exports.creator;
//# sourceMappingURL=index.js.map